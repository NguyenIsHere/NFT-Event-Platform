syntax = "proto3";

package chatbot;

import "google/api/annotations.proto";

service ChatbotService {
  rpc Chat(ChatRequest) returns (ChatResponse) {
    option (google.api.http) = {
      post: "/v1/chat"
      body: "*"
    };
  }
  
// ✅ THÊM: HTTP annotation cho GetChatHistory
  rpc GetChatHistory(ChatHistoryRequest) returns (ChatHistoryResponse) {
    option (google.api.http) = {
      get: "/v1/chat/history"
    };
  }
  
  // ✅ THÊM: HTTP annotation cho IndexData
  rpc IndexData(IndexDataRequest) returns (IndexDataResponse) {
    option (google.api.http) = {
      post: "/v1/chat/index"
      body: "*"
    };
  }
}

message ChatRequest {
  string message = 1;
  string user_id = 2;
  string session_id = 3;
  repeated string context_filters = 4; // Optional - will auto-detect if empty
}

message ChatResponse {
  string response = 1;
  string session_id = 2;
  repeated ContextSource sources = 3;
  double confidence_score = 4;
  repeated string detected_filters = 5; // ✅ THÊM: Return detected filters
}

message ContextSource {
  string type = 1;
  string id = 2;
  string title = 3;
  double relevance_score = 4;
}

message IndexDataRequest {
  string data_type = 1; // "events", "tickets", "users" or empty for all
  bool force_reindex = 2;
}

message IndexDataResponse {
  bool success = 1;
  string message = 2;
  int32 indexed_count = 3;
}

message ChatHistoryRequest {
  string user_id = 1;
  string session_id = 2;
  int32 limit = 3;
}

message ChatHistoryResponse {
  repeated ChatMessage messages = 1;
}

message ChatMessage {
  string id = 1;
  string user_id = 2;
  string session_id = 3;
  string message = 4;
  string response = 5;
  int64 timestamp = 6;
  repeated string detected_filters = 7; // ✅ THÊM: Include in history
}