syntax = "proto3";

package event;

option java_multiple_files = true;

service EventService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  rpc GetEventById(GetEventRequest) returns (GetEventResponse);
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse);
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse);
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse);
}

message CreateEventRequest {
  string organizer_id = 1;
  string name = 2;
  string description = 3;
  string location = 4;
  string banner_url = 5;
  bool seat_map_enabled = 6;
  repeated string seat_map_ids = 7;
  repeated Session sessions = 8;
}

message CreateEventResponse {
  string event_id = 1;
  bool success = 2;
}

message GetEventRequest {
  string event_id = 1;
}

message GetEventResponse {
  string event_id = 1;
  string organizer_id = 2;
  string name = 3;
  string description = 4;
  string location = 5;
  string banner_url = 6;
  bool seat_map_enabled = 7;
  repeated string seat_map_ids = 8;
  repeated Session sessions = 9;
  bool is_active = 10;
  int64 created_at = 11;
  int64 updated_at = 12;
}

message ListEventsRequest {
  string organizer_id = 1; // Thêm để lọc theo organizer
}

message ListEventsResponse {
  repeated GetEventResponse events = 1;
}

message UpdateEventRequest {
  string event_id = 1;
  string organizer_id = 2; 
  string name = 3;
  string description = 4;
  string location = 5;
  string banner_url = 6;
  bool seat_map_enabled = 7;
  repeated string seat_map_ids = 8;
  repeated Session sessions = 9;
  bool is_active = 10;
}

message UpdateEventResponse {
  bool success = 1;
}

message DeleteEventRequest {
  string event_id = 1;
}

message DeleteEventResponse {
  bool success = 1;
}

message Session {
  string id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}
