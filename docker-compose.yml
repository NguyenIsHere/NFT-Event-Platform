services:
  consul:
    image: hashicorp/consul:1.18
    container_name: consul_service_discovery
    ports:
      - "8500:8500"
      - "8600:8600/udp"
      - "8600:8600/tcp"  # DNS cũng có thể dùng TCP
    command: "agent -server -ui -client=0.0.0.0 -bootstrap-expect=1"
    networks:
      microservices_network:
        ipv4_address: 172.23.0.2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-gateway-infra:
    image: kong:3.7
    container_name: kong_api_gateway_infra
    user: root
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yaml
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PLUGINS: bundled,grpc-gateway,jwt
      KONG_LOG_LEVEL: debug
      KONG_TRUSTED_IPS: "0.0.0.0/0"
      KONG_JWT_SHARED_SECRET_VAR: ${KONG_SHARED_JWT_SECRET}
      KONG_DNS_RESOLVER: '172.23.0.2:8600'
      KONG_DNS_ORDER: 'LAST,SRV,A,CNAME' # Thử SRV trước
    dns:
      - "172.23.0.2"  # IP của Consul - Đặt lên đầu để ưu tiên cho .consul
      - "8.8.8.8"     # DNS công cộng
      - "1.1.1.1"    # DNS của Cloudflare
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    volumes:
      - ./kong_config/kong.yaml:/etc/kong/kong.yaml:ro
      - ./protos:/etc/kong/protos:ro
    networks:
      - microservices_network
    depends_on:
      consul:
        condition: service_healthy

  auth-service:
    build:
      context: .
      dockerfile: ./services/02-auth-service/Dockerfile
    container_name: auth_service
    env_file:
      - ./services/02-auth-service/.env
    dns:
    - "172.23.0.2"
    - "8.8.8.8"    # DNS của Google (cho tên miền internet)
    - "1.1.1.1"    # DNS của Cloudflare
    networks:
      - microservices_network
    depends_on:
      consul:
        condition: service_healthy

  user-service:
    build:
      context: .
      dockerfile: ./services/03-user-service/Dockerfile
    container_name: user_service
    env_file:
      - ./services/03-user-service/.env
    dns:
    - "172.23.0.2"
    - "8.8.8.8"    # DNS của Google (cho tên miền internet)
    - "1.1.1.1"    # DNS của Cloudflare
    networks:
      - microservices_network
    depends_on:
      consul:
        condition: service_healthy
        
  ipfs-service: # Service số 8
    build:
      context: .
      dockerfile: ./services/08-ipfs-service/Dockerfile # Đường dẫn đến Dockerfile của ipfs-service
    container_name: ipfs_service
    env_file:
      - ./services/08-ipfs-service/.env # PORT=50058 trong file này
    dns:
      - "172.23.0.2" # Consul DNS
      - "8.8.8.8"
      - "1.1.1.1"
    networks:
      - microservices_network
    depends_on:
      consul:
        condition: service_healthy

networks:
  microservices_network: # Tên network mà các service của bạn tham chiếu đến
    driver: bridge
    ipam: # IP Address Management
      driver: default
      config:
        - subnet: "172.23.0.0/16" # Chọn một dải IP, ví dụ 172.23.0.0/16
          # gateway: "172.23.0.1" # Tùy chọn, Docker thường tự xử lý gateway

  # event-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: event_service
  #   environment:
  #     NODE_ENV: development
  #     PORT: 50053
  #     CONSUL_AGENT_HOST: consul
  #     MONGO_URI: ${MONGO_URI_CLOUD}
  #   volumes:
  #     - ./services/04-event-service:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - microservices_network
  #   depends_on:
  #     consul:
  #       condition: service_healthy

  # ticket-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: ticket_service
  #   environment:
  #     NODE_ENV: development
  #     PORT: 50054
  #     CONSUL_AGENT_HOST: consul
  #     MONGO_URI: ${MONGO_URI_CLOUD}
  #   volumes:
  #     - ./services/05-ticket-service:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - microservices_network
  #   depends_on:
  #     consul:
  #       condition: service_healthy

  # blockchain-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: blockchain_service
  #   environment:
  #     NODE_ENV: development
  #     PORT: 50055
  #     CONSUL_AGENT_HOST: consul
  #     MONGO_URI: ${MONGO_URI_CLOUD}
  #   volumes:
  #     - ./services/06-blockchain-service:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - microservices_network
  #   depends_on:
  #     consul:
  #       condition: service_healthy

  # seatmap-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: seatmap_service
  #   environment:
  #     NODE_ENV: development
  #     PORT: 50056
  #     CONSUL_AGENT_HOST: consul
  #     MONGO_URI: ${MONGO_URI_CLOUD}
  #   volumes:
  #     - ./services/07-seatmap-service:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - microservices_network
  #   depends_on:
  #     consul:
  #       condition: service_healthy



